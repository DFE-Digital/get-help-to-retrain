trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

variables:
  IMAGE_NAME: '$(dockerHubUserName)/get-help-to-retrain'
  postgresUrl: postgres://test:test@localhost:5432/get-help-to-retrain

resources:
  containers:
  - container: 'postgres'
    image: 'postgres:11-alpine'
    ports:
      - 5432:5432/tcp
    env:
      POSTGRES_DB: 'get-help-to-retrain'
      POSTGRES_USER: 'test'
      POSTGRES_PASSWORD: 'test'
  - container: 'selenium'
    image: 'selenium/standalone-chrome:3'
    ports:
      - 4444:4444/tcp
    volumes:
      - /dev/shm:/dev/shm

stages:
- stage: Checks
  displayName: Preflight checks

  jobs:
    - job: Tests
      displayName: Rubocop tests
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
        - task: UseRubyVersion@0
          inputs:
            versionSpec: '>= 2.6.2'
            addToPath: true # Optional

        # Todo: Look for support in the build box for the same ruby minor version.
        - script: |
            echo "2.6.2" > .ruby-version
            sudo apt-get install libpq-dev
            gem install bundler
            bundle install --retry=3 --jobs=4
          displayName: 'bundle install'

        - script: |
            bundle exec rubocop --format clang
          displayName: 'rubocop'

        - script: |
            bundle exec brakeman
          displayName: 'brakeman'

        - script: |
            bundle exec govuk-lint-sass app/webpacker/styles
          displayName: 'GovUK lint'

- stage: Build
  displayName: Build image

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-16.04'

    services:
      postgres: postgres
      selenium: selenium

    steps:
      - script: |
          git_sha=$(git rev-parse --short HEAD)
          echo "##vso[build.updatebuildnumber]$git_sha"
        displayName: 'Set Image Tags'

      - script: |
          gateway_ip=$(docker network inspect bridge --format='{{range .IPAM.Config}}{{.Gateway}}{{end}}')
          echo "##vso[task.setvariable variable=SeleniumRemoteAddress;]$gateway_ip"
        displayName: 'Set Task Variables'

      - task: Docker@1
        displayName: Docker Hub login
        inputs:
          command: login
          containerregistrytype: Container Registry
          dockerRegistryEndpoint: DFE-Digital Docker Hub

      - script: docker pull $(IMAGE_NAME):latest || true
        displayName: "Pull latest docker image to cache"

      - task: Docker@1
        displayName: Build docker image
        inputs:
          command: build
          imageName: $(IMAGE_NAME):$(Build.BuildNumber)
          dockerFile: Dockerfile
          arguments: '--cache-from $(IMAGE_NAME):latest'

      - task: Docker@1
        displayName: Run Rubocop
        inputs:
          command: run
          imageName: $(IMAGE_NAME):$(Build.BuildNumber)
          containerCommand: bundle exec rubocop --format clang
          runInBackground: false
          arguments: -e RAILS_ENV=test -e RACK_ENV=test -e NODE_ENV=test

      - task: Docker@1
        displayName: Run Brakeman
        inputs:
          command: Run an image
          imageName: $(IMAGE_NAME):$(Build.BuildNumber)
          containerCommand: bundle exec brakeman
          runInBackground: false
          arguments: -e RAILS_ENV=test -e RACK_ENV=test -e NODE_ENV=test

      - task: Docker@1
        displayName: Run GovUK Sass linter
        inputs:
          command: Run an image
          imageName: $(IMAGE_NAME):$(Build.BuildNumber)
          containerCommand: bundle exec govuk-lint-sass app/webpacker/styles
          runInBackground: false
          arguments: -e RAILS_ENV=test -e RACK_ENV=test -e NODE_ENV=test

      - task: Docker@1
        displayName: Database Setup
        inputs:
          command: run
          imageName: $(IMAGE_NAME):$(Build.BuildNumber)
          containerCommand: bundle exec rake db:create db:test:prepare
          runInBackground: false
          arguments: --net host -e DATABASE_URL=$(postgresUrl) -e RAILS_ENV=test -e RACK_ENV=test -e NODE_ENV=test

      - task: Docker@1
        displayName: Run Rspec tests
        inputs:
          command: Run an image
          imageName: $(IMAGE_NAME):$(Build.BuildNumber)
          volumes: $(Build.SourcesDirectory):/build
          containerCommand: bundle exec rspec --format RspecJunitFormatter --out /build/TEST-rspec.xml
          runInBackground: false
          arguments: --net host -e SELENIUM_REMOTE_ADDRESS=$(SeleniumRemoteAddress) -e DATABASE_URL=$(postgresUrl) -e RAILS_ENV=test -e RACK_ENV=test -e NODE_ENV=test

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: '*.xml'
          failedTaskOnFailedTest: true

      - task: Docker@2
        displayName: Push new image with current tag
        inputs:
          command: push
          repository: $(IMAGE_NAME)
          tags: $(Build.BuildNumber)

      - task: Docker@2
        displayName: Push tagged image (latest) if master
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          command: push
          repository: $(IMAGE_NAME)
          tags: latest

      - task: CopyFiles@2
        displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
        inputs:
          Contents: |
            azure/**
          TargetFolder: '$(build.artifactstagingdirectory)'
          OverWrite: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'
          ArtifactName: 'ARMTemplates'

- stage: Deployment
  displayName: Deployment

  jobs:
    - job: CI
      displayName: Deploy to CI
      pool:
        vmImage: 'vs2017-win2016'

      variables:
        - group: 'Release Common'
        - name: resourceGroupName
          value: s108d01-ci
        - name: azureSubscription
          value: azdo.pipelines.cip.S108D.arm10a1d6de-2cee-4f62-b5fa-2cf08d05a1dc

      steps:
        - task: AzureResourceGroupDeployment@2
          displayName: 'Azure Deployment:Create Or Update Resource Group action on $(resourceEnvironmentName)-$(serviceName)'
          inputs:
            action: 'Create Or Update Resource Group'
            location: 'West Europe'
            azureSubscription: azdo.pipelines.cip.S108D.arm10a1d6de-2cee-4f62-b5fa-2cf08d05a1dc
            resourceGroupName: s108d01-ci
            csmFile: './azure/template.json'
            csmParametersFile: './azure/config/ci.parameters.json'
            overrideParameters: '-containerImageReference $(IMAGE_NAME):$(Build.BuildNumber) -securityAlertEmail $(securityAlertEmail)'
            deploymentOutputs: DeploymentOutput

        - task: RasmusWatjen.ARMOutputParserExtension.ARMOutputConverter.ARMOutputParserExtension@1
          displayName: 'Parse ARM Deployment Outputs into variables'
          inputs:
            armOutput: $(DeploymentOutput)
            variablePrefix: arm_

        - script: |
            env
          displayName: 'debug'

        - task: AzureAppServiceManage@0
          displayName: 'Start Azure App Service: $(appServiceName)'
          inputs:
            azureSubscription: azdo.pipelines.cip.S108D.arm10a1d6de-2cee-4f62-b5fa-2cf08d05a1dc
            Action: 'Start Azure App Service'
            WebAppName: $(arm_appServiceName)
            SpecifySlotOrASE: true
            resourceGroupName: s108d01-ci
            Slot: staging

        - task: AzureAppServiceManage@0
          displayName: 'Swap Slots: $(appServiceName)'
          inputs:
            azureSubscription: azdo.pipelines.cip.S108D.arm10a1d6de-2cee-4f62-b5fa-2cf08d05a1dc
            WebAppName: $(arm_appServiceName)
            resourceGroupName: 's108d01-ci'
            SourceSlot: staging

        - task: AzureAppServiceManage@0
          displayName: 'Stop Azure App Service: $(appServiceName)'
          inputs:
            azureSubscription: azdo.pipelines.cip.S108D.arm10a1d6de-2cee-4f62-b5fa-2cf08d05a1dc
            Action: 'Stop Azure App Service'
            WebAppName: $(arm_appServiceName)
            SpecifySlotOrASE: true
            resourceGroupName: s108d01-ci
            Slot: staging
