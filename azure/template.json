{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "The environment of the resource."
      }
    },
    "serviceName": {
      "type": "string",
      "metadata": {
        "description": "The abbreviation of the service name to be used when naming a resource."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the key vault."
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource group for the key vault."
      }
    },
    "customHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The custom hostname to add to the app service."
      }
    },
    "certificateName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the certificate in key vault."
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the database that the app will connect to."
      }
    },
    "databaseUsername": {
      "type": "string",
      "metadata": {
        "description": "The username used to connect to the database."
      }
    },
    "databasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password used to connect to the database."
      }
    },
    "databasePort": {
      "type": "string",
      "metadata": {
        "description": "The default port for the psql server."
      }
    },
    "databaseIPWhiteList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List of IP Addresses to whitelist on the database firewall"
      }
    },
    "securityAlertEmail": {
      "type": "string",
      "metadata": {
        "description": "The email address to be used for psql security alerts."
      }
    },
    "dockerHubOrg": {
      "type": "string",
      "metadata": {
        "description": "The name of the docker hub organization to fecth the container from."
      }
    },
    "containerImageReference": {
      "type": "string",
      "metadata": {
        "description": "The container image to pull from the server. Should be in image:tag format."
      }
    },
    "appInsightsJavaScriptEnabled": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "whether to enable JS page tracking for Application Insights"
      }
    },
    "logglyToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "Optional token for Loggly logging service"
      }
    },
    "secretKeyBase": {
      "type": "string",
      "metadata": {
        "description:": "The secret_key_base for Rails"
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ]
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ]
    },
    "certificatePermissions": {
      "type": "array",
      "defaultValue": [
        "all"
      ]
    },
    "appServicePlanSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "1"
    },
    "appServicePlanInstances": {
      "type": "int",
      "defaultValue": 1
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/DFE-Digital/get-help-to-retrain-devops/master/templates/",
    "resourceNamePrefix": "[toLower(concat( parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
    "appServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
    "keyvaultCertificateName": "[if(greater(length(parameters('certificateName')),0), parameters('certificateName'), replace(parameters('customHostName'), '.', '-'))]",
    "storageAccountName": "[replace(concat(variables('resourceNamePrefix'), 'str'), '-', '')]",
    "workerAppServiceName": "[concat(variables('resourceNamePrefix'), 'wkr-as')]",
    "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
    "databaseServerName": "[concat(variables('resourceNamePrefix'), '-psql')]",
    "appServiceRuntimeStack": "[concat('DOCKER|', parameters('dockerHubOrg'), '/', parameters('containerImageReference'))]"
  },
  "resources": [
    {
      "condition": "[greater(length(parameters('customHostName')), 0)]",
      "name": "app-service-certificate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[variables('keyVaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "storage-account",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "postgresql-server",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "postgresServerName": {
            "value": "[variables('databaseServerName')]"
          },
          "postgresAdminLogin": {
            "value": "[parameters('databaseUsername')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('databasePassword')]"
          },
          "securityAlertEmailAddress": {
            "value": "[parameters('securityAlertEmail')]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      },
      "dependsOn": [
        "storage-account"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "postgresql-database",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverName": {
            "value": "[variables('databaseServerName')]"
          },
          "databaseName": {
            "value": "[parameters('databaseName')]"
          }
        }
      },
      "dependsOn": [
        "postgresql-server"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "postgresql-server-firewall-rules",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "firewallRuleNamePrefix": {
            "value": "[concat(variables('appServicePlanName'),'-AZURE_IP-')]"
          },
          "ipAddresses": {
            "value": "[concat(reference('app-service').outputs.possibleOutboundIpAddresses.value,parameters('databaseIPWhiteList'))]"
          },
          "serverName": {
            "value": "[variables('databaseServerName')]"
          }
        }
      },
      "dependsOn": [
        "postgresql-server"
      ]
    },
    {
      "name": "app-service-logs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-logs.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "applicationLogsFileSystem": {
            "value": "Error"
          },
          "httpLoggingEnabled": {
            "value": true
          },
          "requestTracingEnabled": {
            "value": true
          },
          "detailedErrorLoggingEnabled": {
            "value": true
          }
        }
      },
      "dependsOn": [
        "app-service"
      ]
    },
    {
      "name": "app-service-plan",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanSize": {
            "value": "[parameters('appServicePlanSize')]"
          },
          "appServicePlanInstances": {
            "value": "[parameters('appServicePlanInstances')]"
          }
        }
      }
    },
    {
      "name": "app-service",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-linux.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "runtimeStack": {
            "value": "[variables('appServiceRuntimeStack')]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference('app-insights').outputs.instrumentationKey.value]"
              },
              {
                "name": "APPINSIGHTS_JAVASCRIPT_ENABLED",
                "value": "[parameters('appInsightsJavaScriptEnabled')]"
              },
              {
                "name": "DB_DATABASE",
                "value": "[parameters('databaseName')]"
              },
              {
                "name": "DB_PASSWORD",
                "value": "[parameters('databasePassword')]"
              },
              {
                "name": "DB_USERNAME",
                "value": "[concat(parameters('databaseUsername'), '@', variables('databaseServerName'))]"
              },
              {
                "name": "DB_HOST",
                "value": "[reference('postgresql-server').outputs.fullyQualifiedDomainName.value]"
              },
              {
                "name": "LOGGLY_TOKEN",
                "value": "[parameters('logglyToken')]"
              },
              {
                "name": "POSTGRESQL_SERVICE_PORT",
                "value": "[parameters('databasePort')]"
              },
              {
                "name": "SECRET_KEY_BASE",
                "value": "[parameters('secretKeyBase')]"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('customHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('customHostname')), 0), reference('app-service-certificate').outputs.certificateThumbprint.value, '')]"
          }
        }
      },
      "dependsOn": [
        "app-service-plan"
      ]
    },
    {
      "apiVersion": "2017-05-10",
      "name": "app-insights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('appServiceName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    },
    "workerAppServiceName": {
      "type": "string",
      "value": "[variables('workerAppServiceName')]"
    }
  }
}
