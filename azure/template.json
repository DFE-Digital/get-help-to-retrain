{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the key vault."
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource group for the key vault."
      }
    },
    "customHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The custom hostname to add to the app service."
      }
    },
    "certificateName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the certificate in key vault."
      }
    },
    "domainDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the database that the app will connect to."
      }
    },
    "domainDatabaseUsername": {
      "type": "string",
      "metadata": {
        "description": "The username used to connect to the database."
      }
    },
    "domainDatabasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password used to connect to the database."
      }
    },
    "restrictedDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the database that the app will connect to."
      }
    },
    "restrictedDatabaseUsername": {
      "type": "string",
      "metadata": {
        "description": "The username used to connect to the database."
      }
    },
    "restrictedDatabasePassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password used to connect to the database."
      }
    },
    "domainDatabaseIPWhiteList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List of IP Addresses to whitelist on the database firewall"
      }
    },
    "containerImageReference": {
      "type": "string",
      "metadata": {
        "description": "The container image to pull from the server. Should be in image:tag format."
      }
    },
    "dockerComposeFile": {
      "type": "string",
      "metadata": {
        "description": "The docker compose-file to use with multi-containers"
      }
    },
    "logglyToken": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "Optional token for Loggly logging service"
      }
    },
    "splitApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "Optional token for Split.io feature flag service"
      }
    },
    "secretKeyBase": {
      "type": "string",
      "metadata": {
        "description:": "The secret_key_base for Rails"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU of App Service Plan"
      }
    },
    "appServicePlanInstances": {
      "type": "int",
      "defaultValue": 1
    },
    "sentryDsn": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "sentry.io - Data Source Name (DSN) URL"
      }
    },
    "notifyApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "GOV.UK Notify Service - API KEY"
      }
    },
    "findAJobApiId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "GOV.UK Find A Job - API ID"
      }
    },
    "findAJobApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "GOV.UK Find A Job - API KEY"
      }
    },
    "bingSpellCheckApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "Bing Spell Check Service - API KEY"
      }
    },
    "googleAnalyticsTrackingId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description:": "Google Analytics - Tracking ID"
      }
    },
    "supportEmailAddresses": {
      "type": "array"
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/DFE-Digital/get-help-to-retrain-devops/master/templates/",
    "resourceNamePrefix": "[toLower(resourceGroup().name)]",
    "environmentName": "[split(variables('resourceNamePrefix'),'-')[1]]",
    "appServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
    "keyvaultCertificateName": "[if(greater(length(parameters('certificateName')),0), parameters('certificateName'), replace(parameters('customHostName'), '.', '-'))]",
    "storageAccountName": "[replace(concat(variables('resourceNamePrefix'), 'str'), '-', '')]",
    "appServicePlanName": "[concat(variables('resourceNamePrefix'), '-asp')]",
    "domainDatabaseServerName": "[concat(variables('resourceNamePrefix'), '-', parameters('domainDatabaseName'),'Psql')]",
    "restrictedDatabaseServerName": "[concat(variables('resourceNamePrefix'), '-', parameters('restrictedDatabaseName'),'Psql')]",
    "appServiceRuntimeStack": "[concat('COMPOSE|', base64(replace(base64ToString(parameters('dockerComposeFile')),'__CONTAINER_REFERENCE__',parameters('containerImageReference'))))]",
    "warmupPingPath": "/status",
    "containerStartTimeLimit": "300"
  },
  "resources": [
    {
      "name": "storage-account",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageKind": {
            "value": "StorageV2"
          }
        }
      }
    },
    {
      "apiVersion": "2019-08-01",
      "name": "postgresql-domain-server",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "postgresServerName": {
            "value": "[variables('domainDatabaseServerName')]"
          },
          "postgresAdminLogin": {
            "value": "[parameters('domainDatabaseUsername')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('domainDatabasePassword')]"
          },
          "securityAlertEmailAddress": {
            "value": "[coalesce(parameters('supportEmailAddresses'))[0].email]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      },
      "dependsOn": [
        "storage-account"
      ]
    },
    {
      "apiVersion": "2019-08-01",
      "name": "postgresql-restricted-server",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-server.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "postgresServerName": {
            "value": "[variables('restrictedDatabaseServerName')]"
          },
          "postgresAdminLogin": {
            "value": "[parameters('restrictedDatabaseUsername')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('restrictedDatabasePassword')]"
          },
          "securityAlertEmailAddress": {
            "value": "[coalesce(parameters('supportEmailAddresses'))[0].email]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      },
      "dependsOn": [
        "storage-account"
      ]
    },
    {
      "apiVersion": "2019-08-01",
      "name": "postgresql-domain-database",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverName": {
            "value": "[variables('domainDatabaseServerName')]"
          },
          "databaseName": {
            "value": "[parameters('domainDatabaseName')]"
          }
        }
      },
      "dependsOn": [
        "postgresql-domain-server"
      ]
    },
    {
      "apiVersion": "2019-08-01",
      "name": "postgresql-restricted-database",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-database.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "serverName": {
            "value": "[variables('restrictedDatabaseServerName')]"
          },
          "databaseName": {
            "value": "[parameters('restrictedDatabaseName')]"
          }
        }
      },
      "dependsOn": [
        "postgresql-restricted-server"
      ]
    },
    {
      "apiVersion": "2019-08-01",
      "name": "postgresql-domain-server-firewall-rules",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "firewallRuleNamePrefix": {
            "value": "[concat(variables('appServicePlanName'),'-AZURE_IP-')]"
          },
          "ipAddresses": {
            "value": "[concat(reference('app-service').outputs.possibleOutboundIpAddresses.value,parameters('domainDatabaseIPWhiteList'))]"
          },
          "serverName": {
            "value": "[variables('domainDatabaseServerName')]"
          }
        }
      },
      "dependsOn": [
        "postgresql-domain-server"
      ]
    },
    {
      "apiVersion": "2019-08-01",
      "name": "postgresql-restricted-server-firewall-rules",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'postgresql-server-firewall-rules.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "firewallRuleNamePrefix": {
            "value": "[concat(variables('appServicePlanName'),'-AZURE_IP-')]"
          },
          "ipAddresses": {
            "value": "[reference('app-service').outputs.possibleOutboundIpAddresses.value]"
          },
          "serverName": {
            "value": "[variables('restrictedDatabaseServerName')]"
          }
        }
      },
      "dependsOn": [
        "postgresql-restricted-server"
      ]
    },
    {
      "condition": "[greater(length(parameters('customHostName')), 0)]",
      "name": "app-service-certificate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[variables('keyVaultCertificateName')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          }
        }
      },
      "dependsOn": [
        "app-service-plan"
      ]
    },
    {
      "name": "app-service-logs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-logs.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "applicationLogsFileSystem": {
            "value": "Error"
          },
          "httpLoggingEnabled": {
            "value": true
          },
          "requestTracingEnabled": {
            "value": true
          },
          "detailedErrorLoggingEnabled": {
            "value": true
          }
        }
      },
      "dependsOn": [
        "app-service"
      ]
    },
    {
      "name": "app-service-plan",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "sku": {
            "value": "[parameters('sku')]"
          },
          "appServicePlanInstances": {
            "value": "[parameters('appServicePlanInstances')]"
          }
        }
      }
    },
    {
      "name": "app-service",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'), 'app-service-linux.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourceGroup().name]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "runtimeStack": {
            "value": "[variables('appServiceRuntimeStack')]"
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "WEBSITE_SLOT_POLL_WORKER_FOR_CHANGE_NOTIFICATION",
                "value": "0"
              },
              {
                "name": "WEBSITE_SWAP_WARMUP_PING_PATH",
                "value": "[variables('warmupPingPath')]"
              },
              {
                "name": "WEBSITES_CONTAINER_START_TIME_LIMIT",
                "value": "[variables('containerStartTimeLimit')]"
              },
              {
                "name": "WEBSITES_WEB_CONTAINER_NAME",
                "value": "web"
              },
              {
                "name": "ENVIRONMENT_NAME",
                "value": "[variables('environmentName')]"
              },
              {
                "name": "DB_DATABASE",
                "value": "[parameters('domainDatabaseName')]"
              },
              {
                "name": "DB_PASSWORD",
                "value": "[parameters('domainDatabasePassword')]"
              },
              {
                "name": "DB_USERNAME",
                "value": "[concat(parameters('domainDatabaseUsername'), '@', variables('domainDatabaseServerName'))]"
              },
              {
                "name": "DB_HOST",
                "value": "[reference('postgresql-domain-server').outputs.fullyQualifiedDomainName.value]"
              },
              {
                "name": "RESTRICTED_DB_DATABASE",
                "value": "[parameters('restrictedDatabaseName')]"
              },
              {
                "name": "RESTRICTED_DB_PASSWORD",
                "value": "[parameters('restrictedDatabasePassword')]"
              },
              {
                "name": "RESTRICTED_DB_USERNAME",
                "value": "[concat(parameters('restrictedDatabaseUsername'), '@', variables('restrictedDatabaseServerName'))]"
              },
              {
                "name": "RESTRICTED_DB_HOST",
                "value": "[reference('postgresql-restricted-server').outputs.fullyQualifiedDomainName.value]"
              },
              {
                "name": "LOGGLY_TOKEN",
                "value": "[parameters('logglyToken')]"
              },
              {
                "name": "SPLIT_API_KEY",
                "value": "[parameters('splitApiKey')]"
              },
              {
                "name": "SECRET_KEY_BASE",
                "value": "[parameters('secretKeyBase')]"
              },
              {
                "name": "SENTRY_DSN",
                "value": "[parameters('sentryDsn')]"
              },
              {
                "name": "NOTIFY_API_KEY",
                "value": "[parameters('notifyApiKey')]"
              },
              {
                "name": "FIND_A_JOB_API_ID",
                "value": "[parameters('findAJobApiId')]"
              },
              {
                "name": "FIND_A_JOB_API_KEY",
                "value": "[parameters('findAJobApiKey')]"
              },
              {
                "name": "GOOGLE_ANALYTICS_TRACKING_ID",
                "value": "[parameters('googleAnalyticsTrackingId')]"
              },
              {
                "name": "BING_SPELL_CHECK_API_KEY",
                "value": "[parameters('bingSpellCheckApiKey')]"
              }
            ]
          },
          "customHostName": {
            "value": "[parameters('customHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('customHostname')), 0), reference('app-service-certificate').outputs.certificateThumbprint.value, '')]"
          }
        }
      },
      "dependsOn": [
        "app-service-plan"
      ]
    }
  ],
  "outputs": {
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    }
  }
}
