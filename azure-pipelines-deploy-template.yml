parameters:
  debug: false
  subscriptionServiceConnection:
  resourceGroupName:
  environment:
  containerImageReference:
  supportEmailAddresses: '[{"name":"GHtR Alerts","email":"ghtr-alerts@digital.education.gov.uk"}]'

jobs:
  - deployment: deploy_${{parameters.environment}}
    displayName: 'Deploy App to ${{parameters.environment}}'
    environment: '${{parameters.environment}}'

    pool:
      vmImage: 'windows-2019'

    strategy:
      runOnce:
        deploy:
          steps:
            - pwsh: |
                $DockerCompose = Get-Content -Path $(Pipeline.Workspace)\ARMTemplates\azure\docker-compose-azure.yml -Raw
                $Bytes = [System.Text.Encoding]::ASCII.GetBytes($DockerCompose)
                $EncodedText =[Convert]::ToBase64String($Bytes)
                echo "##vso[task.setvariable variable=dockerCompose]$EncodedText"
                $EncodedText
              displayName: Base64 encode composite file into variable

            - task: AzureResourceGroupDeployment@2
              displayName: 'Azure Deployment:Create Or Update Resource Group action on $(resourceEnvironmentName)-$(serviceName)'
              inputs:
                action: 'Create Or Update Resource Group'
                location: 'West Europe'
                azureSubscription: '${{parameters.subscriptionServiceConnection}}'
                resourceGroupName: '${{parameters.resourceGroupName}}'
                csmFile: '$(Pipeline.Workspace)\ARMTemplates\azure\template.json'
                csmParametersFile: '$(Pipeline.Workspace)\ARMTemplates\azure\config\${{parameters.environment}}.parameters.json'
                overrideParameters: '-containerImageReference "${{parameters.containerImageReference}}" -dockerComposeFile "$(dockerCompose)"  -supportEmailAddresses ${{parameters.supportEmailAddresses}}'
                deploymentOutputs: DeploymentOutput

            - task: AzureAppServiceManage@0
              displayName: 'Start Azure App Service: ${{parameters.environment}}'
              condition: ne(variables['appServiceName'], 'disabled')
              inputs:
                azureSubscription: '${{parameters.subscriptionServiceConnection}}'
                Action: 'Start Azure App Service'
                WebAppName: '${{parameters.resourceGroupName}}-as'
                SpecifySlotOrASE: true
                resourceGroupName: '${{parameters.resourceGroupName}}'
                Slot: staging

            - task: AzureAppServiceManage@0
              displayName: 'Swap Slots: ${{parameters.environment}}'
              condition: ne(variables['appServiceName'], 'disabled')
              inputs:
                azureSubscription: '${{parameters.subscriptionServiceConnection}}'
                WebAppName: '${{parameters.resourceGroupName}}-as'
                resourceGroupName: '${{parameters.resourceGroupName}}'
                SourceSlot: staging

            - task: AzureAppServiceManage@0
              displayName: 'Stop Azure App Service: ${{parameters.environment}}'
              condition: ne(variables['appServiceName'], 'disabled')
              inputs:
                azureSubscription: '${{parameters.subscriptionServiceConnection}}'
                Action: 'Stop Azure App Service'
                WebAppName: '${{parameters.resourceGroupName}}-as'
                SpecifySlotOrASE: true
                resourceGroupName: '${{parameters.resourceGroupName}}'
                Slot: staging
